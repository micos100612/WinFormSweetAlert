<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAABAdJREFUeF7t
        mttPE0EYxZtI/A/9K8Ano8+Nimik5Rq5GFpeVCgKxMuTr0YFNOiDl8TEC9BSxTfAhAcy7ilzurPTr7tD
        SwNs5yS/pDPfXPZ8OzvTTTbj5eXl5eWVrGy2dDHXV7iT6ytWApSmnLtcvI2YbpZewahhPEoQ083Sq8Bo
        GWY/56bUzr2JGp8GJ5mEsm6WXmmjdfOE9brZ+VM2m+3Rz3aVZrqA6tHele3J5HuL/UKDrmCwd/ZGJt83
        u4nCz7cldbC52BX8eFOqJQDe6wlApdQ4jTABARvB5la4qQvdyHW9Cc7eEoKpBntf6VLpgj4LwmPubn6y
        bXLDU2p47L4aGQ8ZGp1uaJcfmY60kRgOwHh2X4Jx2XbhyTMF7e//i4xhQp/adqiTSsBpmSeUXU86moDT
        Ng8oKQY6lgDJfH600UAnzQNKioGWE4ALX1lbV3t7+3qKULtB3dr7D2p8YqY+kYv5udKy+rPzV21ulut1
        SeYrlaoqV7Yj45hQUgy0nICV1XU9dHO9C5KASZLMj92bUa9er6rDw0Pd8+iCXe48bwA2PI5HFhaPNkG0
        sWOk5QTs7u7VBn8wt1Sv47Ln7ouJXe78r42tWnszAa7LHklOElajOZ9JywmgWKZ5DkyZfYD0zH/5+k1t
        V3+rR/NLupdyMg/wmCEJ0qOIOsTMR9HmRBJgmweU2Ucyb0OZ/UziNrxWaDsBknkse4rtXcxj2VPmXOSk
        zYO2E9DsqKPw29U8kkmZc4FOmAdtJ8AczNzwqOOYN/txHNAp86ClBJh3igPZuz1lTiZh7/YUy0nmjzbB
        j2pvP7oJumyA4NgJ4DNPYRDpqKPsCU2ko47Cb5c7n3QMIi71I8dKAM2jIyWZx7Kn7AmJZB5Qrsuex1/p
        8dNIvflfxKy3cU6AaR5Q5sUDPvMU25s0Mw8oqZ8EddwYcUqAbR5Q5sWbGx5l9gFx5gFl92sGJcXwjlAu
        N39PAIkJkMxj2fOv8MP55dqFm+ab/QdPMo9lT5n94qCkmAuJCZDM42JdXobM/+BJ5vFWZyvuLY/E6UT+
        CpuNcYd4wbjjSAJefW1JEw8Oxd95mLWVtHyBi+JOAucENNvtzcEkXJa91M8VSoq5nAROCTir5gElxQAl
        xUBiAs6yeUBJMUBJMZCYAPvCz5J5QEkxQEkx4JyA3JVCvTHJXyvUB8pfbYyfJ7TtUAy8/H5QY3LgRUMn
        1MXFzxPadigGaDCt+AS4JmCy/3lkyaelzjkBdjktdSxr26GaNWQ5LXUsa9uh7IZYNg3LKQV1zglIKz4B
        dgJqn8jEfQabUvJ9xQH/nSC+Ewx+bKHQjd8JBmz47wT9d4LBRoANIShsW8E0U8G3kZHvBL28vLy8vLy6
        TJnMf2MHxWrbuEDiAAAAAElFTkSuQmCC
</value>
  </data>
</root>